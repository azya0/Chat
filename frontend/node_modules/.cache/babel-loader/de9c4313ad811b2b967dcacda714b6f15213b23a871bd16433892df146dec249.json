{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0437\\u044F\\\\Desktop\\\\chat\\\\frontend\\\\src\\\\components\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { auth_headers, clearCurrentUser, currentUser, currentUserExist } from \"../../controllers/userController\";\nimport styles from '../../css/index.module.css';\nimport Chat from \"./MainSelectChat\";\nimport config from \"../../config\";\nimport Message from \"./MainMessage\";\nimport connection from \"../../controllers/websocketController\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const user = currentUser();\n  const messageContent = useRef(null);\n  const [chats, setChats] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(-1);\n  let current_key = -1;\n  if (!connection.exist()) connection.connect();\n  async function GetMessage(event) {\n    console.log(event.data);\n  }\n  async function GetChatMessages(chat_id, interlocutor_id) {\n    if (currentChatId === chat_id) return;\n    if (messages.length !== 0) setMessages([]);\n    const response = await axios.get(`${config.url}/message/chat/${chat_id}`, auth_headers());\n    let result = [];\n    for (let index = 0; index < response.data.total; index++) {\n      let item = response.data.items[index];\n      let style = item.author.username === user.username ? styles.messageOwn : styles.messageInterlocutor;\n      result.push( /*#__PURE__*/_jsxDEV(Message, {\n        message: item.content,\n        style: style\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this));\n      if (index === response.data.total - 1) current_key = item.id + 1;\n    }\n    setMessages(result);\n    setCurrentChatId(chat_id);\n  }\n  function SendMessage() {\n    let message = messageContent.current.innerHTML.replace('<br>', '\\n');\n    if (message === '') return;\n    let _config = auth_headers();\n    _config.params = {\n      message: message\n    };\n    setMessages([/*#__PURE__*/_jsxDEV(Message, {\n      message: message,\n      style: styles.messageOwn\n    }, current_key++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this), ...messages]);\n    messageContent.current.innerHTML = '';\n  }\n  if (Object.keys(chats).length === 0) {\n    axios.get(`${config.url}/chat/all`, auth_headers()).then(response => {\n      let result = {};\n      for (let index = 0; index < response.data.total; index++) {\n        let item = response.data.items[index];\n        result[item.id] = /*#__PURE__*/_jsxDEV(Chat, {\n          data: item,\n          onClickFunction: GetChatMessages\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 35\n        }, this);\n      }\n      setChats(result);\n    }).catch(error => {\n      if (error.response.request.status === 401) {\n        clearCurrentUser();\n        window.location.href = '/auth';\n      }\n    });\n  }\n  return currentUserExist() ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.base,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            clearCurrentUser();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Welcome, \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(chats).map()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), currentChatId === -1 ? null : /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageContainer,\n        children: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.messageInput,\n          contentEditable: true,\n          ref: messageContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: SendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/auth\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n}\n_s(Main, \"kwBGhJho/9WEt4qJbsRwHhAyYko=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useRef","useState","Navigate","axios","auth_headers","clearCurrentUser","currentUser","currentUserExist","styles","Chat","config","Message","connection","jsxDEV","_jsxDEV","Main","_s","user","messageContent","chats","setChats","messages","setMessages","currentChatId","setCurrentChatId","current_key","exist","connect","GetMessage","event","console","log","data","GetChatMessages","chat_id","interlocutor_id","length","response","get","url","result","index","total","item","items","style","author","username","messageOwn","messageInterlocutor","push","message","content","id","fileName","_jsxFileName","lineNumber","columnNumber","SendMessage","current","innerHTML","replace","_config","params","Object","keys","then","onClickFunction","catch","error","request","status","window","location","href","className","base","children","onClick","entries","map","messageContainer","messageInput","contentEditable","ref","to","_c","$RefreshReg$"],"sources":["C:/Users/Азя/Desktop/chat/frontend/src/components/main/Main.jsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport {auth_headers, clearCurrentUser, currentUser, currentUserExist} from \"../../controllers/userController\";\r\nimport styles from '../../css/index.module.css';\r\nimport Chat from \"./MainSelectChat\";\r\nimport config from \"../../config\";\r\nimport Message from \"./MainMessage\";\r\nimport connection from \"../../controllers/websocketController\";\r\n\r\n\r\nfunction Main() {\r\n    const user = currentUser();\r\n\r\n    const messageContent = useRef(null);\r\n\r\n    const [chats, setChats] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const [currentChatId, setCurrentChatId] = useState(-1);\r\n\r\n    let current_key = -1;\r\n\r\n    if (!connection.exist())\r\n        connection.connect();\r\n\r\n    async function GetMessage(event) {\r\n        console.log(event.data);\r\n    }\r\n\r\n    async function GetChatMessages(chat_id, interlocutor_id) {\r\n        if (currentChatId === chat_id)\r\n            return;\r\n\r\n        if (messages.length !== 0)\r\n            setMessages([]);\r\n\r\n        const response = await axios.get(`${config.url}/message/chat/${chat_id}`, auth_headers());\r\n\r\n        let result = [];\r\n\r\n        for (let index = 0; index < response.data.total; index++) {\r\n            let item = response.data.items[index];\r\n\r\n            let style = item.author.username === user.username ? styles.messageOwn : styles.messageInterlocutor;\r\n\r\n            result.push(<Message key={item.id} message={item.content} style={style}/>);\r\n\r\n            if (index === response.data.total - 1)\r\n                current_key = item.id + 1;\r\n        }\r\n\r\n        setMessages(result);\r\n        setCurrentChatId(chat_id);\r\n    }\r\n\r\n    function SendMessage() {\r\n        let message = messageContent.current.innerHTML.replace('<br>', '\\n');\r\n\r\n        if (message === '')\r\n            return;\r\n\r\n        let _config = auth_headers();\r\n        _config.params = { message: message };\r\n\r\n        setMessages([<Message key={current_key++} message={message} style={styles.messageOwn}/>, ...messages]);\r\n\r\n        messageContent.current.innerHTML = '';\r\n    }\r\n\r\n    if (Object.keys(chats).length === 0) {\r\n        axios.get(`${config.url}/chat/all`, auth_headers()).then((response) => {\r\n            let result = {};\r\n\r\n            for (let index = 0; index < response.data.total; index++) {\r\n                let item = response.data.items[index];\r\n\r\n                result[item.id] = <Chat key={item.id} data={item} onClickFunction={GetChatMessages}/>;\r\n            }\r\n\r\n            setChats(result);\r\n        }).catch((error) => {\r\n            if (error.response.request.status === 401) {\r\n                clearCurrentUser();\r\n                window.location.href = '/auth'\r\n            }\r\n        })\r\n    }\r\n\r\n    return (currentUserExist()) ? (\r\n        <div className={styles.base}>\r\n            <nav>\r\n                <header>\r\n                    <button onClick={() => { clearCurrentUser() } }><h3>Welcome, {user.username}</h3></button>\r\n                </header>\r\n                <div>\r\n                    { Object.entries(chats).map() }\r\n                </div>\r\n            </nav>\r\n            { currentChatId === -1 ? null : (\r\n                <main>\r\n                    <div className={styles.messageContainer}>\r\n                        { messages }\r\n                    </div>\r\n                    <footer>\r\n                        <div className={styles.messageInput} contentEditable={true} ref={messageContent}/>\r\n                        <button onClick={SendMessage}>Send</button>\r\n                    </footer>\r\n                </main>\r\n            )}\r\n        </div>\r\n    ) : (<Navigate to=\"/auth\"/>);\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAAQC,YAAY,EAAEC,gBAAgB,EAAEC,WAAW,EAAEC,gBAAgB,QAAO,kCAAkC;AAC9G,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,UAAU,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,IAAI,GAAGX,WAAW,CAAC,CAAC;EAE1B,MAAMY,cAAc,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,IAAIwB,WAAW,GAAG,CAAC,CAAC;EAEpB,IAAI,CAACb,UAAU,CAACc,KAAK,CAAC,CAAC,EACnBd,UAAU,CAACe,OAAO,CAAC,CAAC;EAExB,eAAeC,UAAUA,CAACC,KAAK,EAAE;IAC7BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,IAAI,CAAC;EAC3B;EAEA,eAAeC,eAAeA,CAACC,OAAO,EAAEC,eAAe,EAAE;IACrD,IAAIZ,aAAa,KAAKW,OAAO,EACzB;IAEJ,IAAIb,QAAQ,CAACe,MAAM,KAAK,CAAC,EACrBd,WAAW,CAAC,EAAE,CAAC;IAEnB,MAAMe,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAE,GAAE5B,MAAM,CAAC6B,GAAI,iBAAgBL,OAAQ,EAAC,EAAE9B,YAAY,CAAC,CAAC,CAAC;IAEzF,IAAIoC,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGJ,QAAQ,CAACL,IAAI,CAACU,KAAK,EAAED,KAAK,EAAE,EAAE;MACtD,IAAIE,IAAI,GAAGN,QAAQ,CAACL,IAAI,CAACY,KAAK,CAACH,KAAK,CAAC;MAErC,IAAII,KAAK,GAAGF,IAAI,CAACG,MAAM,CAACC,QAAQ,KAAK9B,IAAI,CAAC8B,QAAQ,GAAGvC,MAAM,CAACwC,UAAU,GAAGxC,MAAM,CAACyC,mBAAmB;MAEnGT,MAAM,CAACU,IAAI,eAACpC,OAAA,CAACH,OAAO;QAAewC,OAAO,EAAER,IAAI,CAACS,OAAQ;QAACP,KAAK,EAAEA;MAAM,GAA7CF,IAAI,CAACU,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAAC,CAAC;MAE1E,IAAIhB,KAAK,KAAKJ,QAAQ,CAACL,IAAI,CAACU,KAAK,GAAG,CAAC,EACjCjB,WAAW,GAAGkB,IAAI,CAACU,EAAE,GAAG,CAAC;IACjC;IAEA/B,WAAW,CAACkB,MAAM,CAAC;IACnBhB,gBAAgB,CAACU,OAAO,CAAC;EAC7B;EAEA,SAASwB,WAAWA,CAAA,EAAG;IACnB,IAAIP,OAAO,GAAGjC,cAAc,CAACyC,OAAO,CAACC,SAAS,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;IAEpE,IAAIV,OAAO,KAAK,EAAE,EACd;IAEJ,IAAIW,OAAO,GAAG1D,YAAY,CAAC,CAAC;IAC5B0D,OAAO,CAACC,MAAM,GAAG;MAAEZ,OAAO,EAAEA;IAAQ,CAAC;IAErC7B,WAAW,CAAC,cAACR,OAAA,CAACH,OAAO;MAAqBwC,OAAO,EAAEA,OAAQ;MAACN,KAAK,EAAErC,MAAM,CAACwC;IAAW,GAA1DvB,WAAW,EAAE;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8C,CAAC,EAAE,GAAGpC,QAAQ,CAAC,CAAC;IAEtGH,cAAc,CAACyC,OAAO,CAACC,SAAS,GAAG,EAAE;EACzC;EAEA,IAAII,MAAM,CAACC,IAAI,CAAC9C,KAAK,CAAC,CAACiB,MAAM,KAAK,CAAC,EAAE;IACjCjC,KAAK,CAACmC,GAAG,CAAE,GAAE5B,MAAM,CAAC6B,GAAI,WAAU,EAAEnC,YAAY,CAAC,CAAC,CAAC,CAAC8D,IAAI,CAAE7B,QAAQ,IAAK;MACnE,IAAIG,MAAM,GAAG,CAAC,CAAC;MAEf,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGJ,QAAQ,CAACL,IAAI,CAACU,KAAK,EAAED,KAAK,EAAE,EAAE;QACtD,IAAIE,IAAI,GAAGN,QAAQ,CAACL,IAAI,CAACY,KAAK,CAACH,KAAK,CAAC;QAErCD,MAAM,CAACG,IAAI,CAACU,EAAE,CAAC,gBAAGvC,OAAA,CAACL,IAAI;UAAeuB,IAAI,EAAEW,IAAK;UAACwB,eAAe,EAAElC;QAAgB,GAAtDU,IAAI,CAACU,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgD,CAAC;MACzF;MAEArC,QAAQ,CAACoB,MAAM,CAAC;IACpB,CAAC,CAAC,CAAC4B,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIA,KAAK,CAAChC,QAAQ,CAACiC,OAAO,CAACC,MAAM,KAAK,GAAG,EAAE;QACvClE,gBAAgB,CAAC,CAAC;QAClBmE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;MAClC;IACJ,CAAC,CAAC;EACN;EAEA,OAAQnE,gBAAgB,CAAC,CAAC,gBACtBO,OAAA;IAAK6D,SAAS,EAAEnE,MAAM,CAACoE,IAAK;IAAAC,QAAA,gBACxB/D,OAAA;MAAA+D,QAAA,gBACI/D,OAAA;QAAA+D,QAAA,eACI/D,OAAA;UAAQgE,OAAO,EAAEA,CAAA,KAAM;YAAEzE,gBAAgB,CAAC,CAAC;UAAC,CAAG;UAAAwE,QAAA,eAAC/D,OAAA;YAAA+D,QAAA,GAAI,WAAS,EAAC5D,IAAI,CAAC8B,QAAQ;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF,CAAC,eACT3C,OAAA;QAAA+D,QAAA,EACMb,MAAM,CAACe,OAAO,CAAC5D,KAAK,CAAC,CAAC6D,GAAG,CAAC;MAAC;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACJlC,aAAa,KAAK,CAAC,CAAC,GAAG,IAAI,gBACzBT,OAAA;MAAA+D,QAAA,gBACI/D,OAAA;QAAK6D,SAAS,EAAEnE,MAAM,CAACyE,gBAAiB;QAAAJ,QAAA,EAClCxD;MAAQ;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACN3C,OAAA;QAAA+D,QAAA,gBACI/D,OAAA;UAAK6D,SAAS,EAAEnE,MAAM,CAAC0E,YAAa;UAACC,eAAe,EAAE,IAAK;UAACC,GAAG,EAAElE;QAAe;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAClF3C,OAAA;UAAQgE,OAAO,EAAEpB,WAAY;UAAAmB,QAAA,EAAC;QAAI;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC,gBACL3C,OAAA,CAACZ,QAAQ;IAACmF,EAAE,EAAC;EAAO;IAAA/B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAE;AAChC;AAACzC,EAAA,CApGQD,IAAI;AAAAuE,EAAA,GAAJvE,IAAI;AAsGb,eAAeA,IAAI;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}