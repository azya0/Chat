{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0437\\u044F\\\\Desktop\\\\chat\\\\frontend\\\\src\\\\components\\\\main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { auth_headers, clearCurrentUser, currentUser, currentUserExist } from \"../../controllers/userController\";\nimport styles from '../../css/index.module.css';\nimport config from \"../../config\";\nimport connection from \"../../controllers/websocketController\";\nimport LeftPanel from \"./MainLeftPanel\";\nimport SearchBar from \"./MainSearchBar\";\nimport MainChat from \"./MainChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const user = currentUser();\n  const messageContent = useRef(null);\n  const [chat_list, setChats] = useState(null);\n  const [filter, setFilter] = useState(null);\n  const [chat, setChat] = useState({});\n  const addMessage = useCallback(message => {\n    setChat({\n      ...chat,\n      messages: [message, ...chat.messages]\n    });\n  }, [chat]);\n  useEffect(() => {\n    axios.get(`${config.url}/chat/all`, auth_headers()).then(response => {\n      const dict = {};\n      Object.entries(response.data.items).map(_ref => {\n        let [_, value] = _ref;\n        return value;\n      }).forEach(_ref2 => {\n        let {\n          id,\n          ...rest\n        } = _ref2;\n        return dict[id] = rest;\n      });\n      setChats(dict);\n    }).catch(error => {\n      if (error.response.request.status === 401) {\n        clearCurrentUser();\n        window.location.href = '/auth';\n      }\n    });\n    connection.connect();\n  }, []);\n  function scrollBottom() {\n    document.getElementById('messageContainer').firstElementChild.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n  useEffect(() => {\n    if (Object.keys(chat).length === 0 || !chat.exist) return;\n    if (chat.messages[0].author.id === currentUser().id) {\n      scrollBottom();\n    }\n  }, [chat, chat.messages]);\n  useEffect(() => {\n    connection.onmessage(event => {\n      const message_data = JSON.parse(event.data);\n      let {\n        chat_id,\n        ...content\n      } = message_data;\n      if (chat_id === chat.id) addMessage(content);\n      if (chat_id in chat_list) {\n        chat_list[chat_id].last_message = content;\n        setChats(chat_list);\n      }\n    });\n  }, [addMessage, chat, chat_list]);\n  function sendMessage() {\n    let message = messageContent.current.innerHTML.replaceAll('&nbsp;', '');\n    message = message.replaceAll('<br>', '\\n').trim();\n    messageContent.current.innerHTML = '';\n    if (message === '') return;\n    if (chat.exist) {\n      axios.post(`${config.url}/message/chat/${chat.id}`, {}, {\n        ...auth_headers(),\n        params: {\n          message: message\n        }\n      }).then(response => {\n        addMessage({\n          author: currentUser(),\n          ...response.data\n        });\n        chat_list[chat.id].last_message = response.data;\n        setChats(chat_list);\n      });\n      return;\n    }\n    axios.post(`${config.url}/chat/user/id/${chat.id}`, {}, {\n      ...auth_headers(),\n      params: {\n        message: message\n      }\n    }).then(response => {\n      let current_chat = response.data;\n      chat_list[current_chat.id] = current_chat;\n      setChats(chat_list);\n      document.getElementById('search-bar').value = '';\n      setFilter(null);\n      setChat({\n        id: Number(current_chat.id),\n        interlocutor: current_chat.interlocutor,\n        messages: [current_chat.last_message],\n        exist: true\n      });\n    });\n  }\n  function filter_chats(filter_string) {\n    if (filter_string === '') {\n      setFilter(null);\n      return;\n    }\n    setFilter(filter_string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n  }\n  return currentUserExist() ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.base,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            clearCurrentUser();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Welcome, \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        filter_function: filter_chats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LeftPanel, {\n        filter: filter,\n        chats: chat_list,\n        chat_object: chat,\n        setChat: setChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MainChat, {\n      chat: chat,\n      scroll: scrollBottom,\n      messageContent: messageContent,\n      send: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/auth\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 10\n  }, this);\n}\n_s(Main, \"s8M38UuLRoEOP0TlzxU40+HceN8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Navigate","axios","auth_headers","clearCurrentUser","currentUser","currentUserExist","styles","config","connection","LeftPanel","SearchBar","MainChat","jsxDEV","_jsxDEV","Main","_s","user","messageContent","chat_list","setChats","filter","setFilter","chat","setChat","addMessage","message","messages","get","url","then","response","dict","Object","entries","data","items","map","_ref","_","value","forEach","_ref2","id","rest","catch","error","request","status","window","location","href","connect","scrollBottom","document","getElementById","firstElementChild","scrollIntoView","behavior","keys","length","exist","author","onmessage","event","message_data","JSON","parse","chat_id","content","last_message","sendMessage","current","innerHTML","replaceAll","trim","post","params","current_chat","Number","interlocutor","filter_chats","filter_string","replace","className","base","children","onClick","username","fileName","_jsxFileName","lineNumber","columnNumber","filter_function","chats","chat_object","scroll","send","to","_c","$RefreshReg$"],"sources":["C:/Users/Азя/Desktop/chat/frontend/src/components/main/Main.jsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport {auth_headers, clearCurrentUser, currentUser, currentUserExist} from \"../../controllers/userController\";\r\nimport styles from '../../css/index.module.css';\r\nimport config from \"../../config\";\r\nimport connection from \"../../controllers/websocketController\";\r\nimport LeftPanel from \"./MainLeftPanel\";\r\nimport SearchBar from \"./MainSearchBar\";\r\nimport MainChat from \"./MainChat\";\r\n\r\nfunction Main() {\r\n    const user = currentUser();\r\n\r\n    const messageContent = useRef(null);\r\n    const [chat_list, setChats] = useState(null);\r\n    const [filter, setFilter] = useState(null);\r\n    const [chat, setChat] = useState({});\r\n\r\n    const addMessage = useCallback((message) => {\r\n        setChat({...chat, messages: [message, ...chat.messages]});\r\n    }, [chat]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`${config.url}/chat/all`, auth_headers()).then((response) => {\r\n            const dict = {};\r\n\r\n            Object.entries(response.data.items).map(([_, value]) => value).forEach(({id, ...rest}) => dict[id] = rest);\r\n\r\n            setChats(dict);\r\n        }).catch((error) => {\r\n            if (error.response.request.status === 401) {\r\n                clearCurrentUser();\r\n                window.location.href = '/auth'\r\n            }\r\n        });\r\n\r\n        connection.connect();\r\n    }, []);\r\n\r\n    function scrollBottom() {\r\n        document.getElementById('messageContainer').firstElementChild.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(chat).length === 0 || !chat.exist) return;\r\n\r\n        if (chat.messages[0].author.id === currentUser().id) {\r\n            scrollBottom();\r\n        }\r\n    }, [chat, chat.messages]);\r\n\r\n    useEffect(() => {\r\n        connection.onmessage((event) => {\r\n            const message_data = JSON.parse(event.data);\r\n\r\n            let {chat_id, ...content} = message_data;\r\n\r\n            if (chat_id === chat.id) addMessage(content);\r\n\r\n            if (chat_id in chat_list) {\r\n                chat_list[chat_id].last_message = content;\r\n                setChats(chat_list);\r\n            }\r\n        });\r\n    }, [addMessage, chat, chat_list]);\r\n\r\n    function sendMessage() {\r\n        let message = messageContent.current.innerHTML.replaceAll('&nbsp;', '');\r\n\r\n        message = message.replaceAll('<br>', '\\n').trim();\r\n\r\n        messageContent.current.innerHTML = '';\r\n\r\n        if (message === '') return;\r\n\r\n        if (chat.exist) {\r\n            axios.post(`${config.url}/message/chat/${chat.id}`, {},\r\n                {...auth_headers(), params: { message: message }}).then(\r\n                (response) => {\r\n                    addMessage({author: currentUser(), ...response.data});\r\n\r\n                    chat_list[chat.id].last_message = response.data;\r\n                    setChats(chat_list);\r\n                }\r\n            );\r\n            return;\r\n        }\r\n\r\n        axios.post(`${config.url}/chat/user/id/${chat.id}`, {},\r\n            {...auth_headers(), params: {message: message}}).then(\r\n                (response) => {\r\n                    let current_chat = response.data;\r\n\r\n                    chat_list[current_chat.id] = current_chat;\r\n\r\n                    setChats(chat_list);\r\n\r\n                    document.getElementById('search-bar').value = '';\r\n\r\n                    setFilter(null);\r\n\r\n                    setChat({id: Number(current_chat.id), interlocutor: current_chat.interlocutor,\r\n                        messages: [current_chat.last_message], exist: true});\r\n        });\r\n    }\r\n\r\n    function filter_chats(filter_string) {\r\n        if (filter_string === '') { setFilter(null); return; }\r\n\r\n        setFilter(filter_string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\r\n    }\r\n\r\n    return (currentUserExist()) ? (\r\n        <div className={styles.base}>\r\n            <nav>\r\n                <header>\r\n                    <button onClick={() => { clearCurrentUser() } }><h3>Welcome, {user.username}</h3></button>\r\n                </header>\r\n                <SearchBar filter_function={filter_chats}/>\r\n                <LeftPanel filter={filter} chats={chat_list} chat_object={chat} setChat={setChat}/>\r\n            </nav>\r\n            <MainChat chat={chat} scroll={scrollBottom} messageContent={messageContent} send={sendMessage}/>\r\n        </div>\r\n    ) : (<Navigate to=\"/auth\"/>);\r\n}\r\n\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}